// Developer Express Code Central Example:
// How to show dragged rows as a cursor when performing Drag & Drop in TreeList and Grid controls
// 
// This example shows how to customize drag&drop in Grid and TreeList controls, so
// that a dragged row is shown as a cursor. To do so, you need to override the
// corresponding DragDropManager class to pass RowData to DragElement instead of
// the row content and change its template to draw rows in the same way as they are
// drawn in Grid.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4165

// Developer Express Code Central Example:
// How to show dragged rows as a cursor when performing Drag & Drop in TreeList and Grid controls
// 
// This example shows how to customize drag&drop in Grid and TreeList controls, so
// that a dragged row is shown as a cursor. To do so, you need to override the
// corresponding DragDropManager class to pass RowData to DragElement instead of
// the row content and change its template to draw rows in the same way as they are
// drawn in Grid.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4165

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Drag_Drop_rows.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
